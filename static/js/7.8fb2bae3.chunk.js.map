{"version":3,"sources":["components/Login/style.js","components/Login/index.js"],"names":["StLoginContainer","styled","main","StLoginForm","form","StLoginFormControl","div","StLoginFormControlInput","input","StSubmitBtn","button","LoginForm","validationSchema","Yup","name","required","email","password","min","matches","formik","useFormik","initialValues","bankName","cost","time","onSubmit","values","console","log","handleSubmit","htmlFor","type","id","placeholder","getFieldProps","errors","touched","className"],"mappings":"+JAEaA,EAAmBC,IAAOC,KAAV,wHAOhBC,EAAcF,IAAOG,KAAV,0mBA2BXC,EAAqBJ,IAAOK,IAAV,2PAclBC,EAA0BN,IAAOO,MAAV,2JASvBC,EAAcR,IAAOS,OAAV,8VCuBTC,UAvEG,WAChB,IAUMC,EAAmBC,IAAW,CAClCC,KAAMD,MAAaE,SAAS,0BAC5BC,MAAOH,MACJG,MAAM,wBACND,SAAS,0BACZE,SAAUJ,MACPE,SAAS,yBACTG,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CAGnBC,EAASC,YAAU,CAAEC,cArBL,CACpBC,SAAU,GACVC,KAAM,IACNC,KAAM,IAkBkCC,SAfzB,SAACC,GAChBC,QAAQC,IAAI,eAAgBF,IAcsBf,qBAEpD,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,CAAauB,SAAUN,EAAOU,cAC5B,kBAACzB,EAAD,KACE,2BAAO0B,QAAQ,QAAf,SACA,kBAACxB,EAAD,eACEyB,KAAK,OACLC,GAAG,OACHnB,KAAK,OACLoB,YAAY,QACRd,EAAOe,cAAc,UAE1Bf,EAAOgB,OAAOtB,KAAO,2BAAIM,EAAOgB,OAAOtB,MAAY,MAEtD,kBAACT,EAAD,KACE,2BAAO0B,QAAQ,SAAf,UACA,kBAACxB,EAAD,eACEyB,KAAK,QACLC,GAAG,QACHnB,KAAK,QACLoB,YAAY,SACRd,EAAOe,cAAc,WAE1Bf,EAAOiB,QAAQrB,OAASI,EAAOgB,OAAOpB,MACrC,2BAAII,EAAOgB,OAAOpB,OAChB,MAEN,kBAACX,EAAD,KACE,2BAAO0B,QAAQ,YAAf,aACA,kBAACxB,EAAD,eACEyB,KAAK,WACLC,GAAG,WACHnB,KAAK,WACLoB,YAAY,YACRd,EAAOe,cAAc,cAE1Bf,EAAOiB,QAAQpB,UAAYG,EAAOgB,OAAOnB,SACxC,2BAAIG,EAAOgB,OAAOnB,UAChB,KACJ,wBAAIqB,UAAU,mBAAd,oBAEF,kBAAC7B,EAAD,CAAauB,KAAK,UAAlB","file":"static/js/7.8fb2bae3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StLoginContainer = styled.main`\n  margin-left: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StLoginForm = styled.form`\n  min-width: 500px;\n  padding: 2rem;\n  font-size: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.2;\n  letter-spacing: 1px;\n  text-transform: capitalize;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n\n  .forgot-password {\n    font-size: 0.8rem;\n    margin-top: 0.5rem;\n    margin-left: 70%;\n    text-decoration: underline;\n    cursor: pointer;\n    color: rgba(29, 8, 8, 0.521);\n  }\n  .forgot-password:hover {\n    cursor: pointer;\n    color: rgba(34, 34, 34, 0.774);\n  }\n`;\n\nexport const StLoginFormControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-left: 10px;\n  margin-bottom: 2rem;\n  & p {\n    color: red;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StLoginFormControlInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  margin-top: 10px;\n  padding: 0.5rem;\n  color: #222;\n  border-bottom: 2px solid #e0e0e0;\n`;\n\nexport const StSubmitBtn = styled.button`\n  color: #fff;\n  cursor: pointer;\n  width: 80%;\n  height: 2.5rem;\n  margin: 5px auto;\n  border-radius: 20px;\n  transition: all 0.3s linear;\n  background: rgb(3, 247, 212);\n  background: linear-gradient(\n    90deg,\n    rgba(3, 247, 212, 1) 20%,\n    rgba(56, 29, 163, 1) 50%,\n    rgba(243, 0, 255, 1) 80%\n  );\n`;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  StLoginContainer,\n  StLoginForm,\n  StLoginFormControl,\n  StLoginFormControlInput,\n  StSubmitBtn,\n} from \"./style\";\n\nconst LoginForm = () => {\n  const initialValues = {\n    bankName: \"\",\n    cost: 123,\n    time: \"\",\n  };\n\n  const onSubmit = (values) => {\n    console.log(\"from data : \", values);\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required(\"This feild is Required\"),\n    email: Yup.string()\n      .email(\"Invalid email format\")\n      .required(\"This feild is Required\"),\n    password: Yup.string()\n      .required(\"No password provided.\")\n      .min(8, \"Password is too short - should be 8 chars minimum.\")\n      .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n  });\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  return (\n    <StLoginContainer>\n      <StLoginForm onSubmit={formik.handleSubmit}>\n        <StLoginFormControl>\n          <label htmlFor=\"name\">Name:</label>\n          <StLoginFormControlInput\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Name\"\n            {...formik.getFieldProps(\"name\")}\n          />\n          {formik.errors.name ? <p>{formik.errors.name}</p> : null}\n        </StLoginFormControl>\n        <StLoginFormControl>\n          <label htmlFor=\"email\">Email:</label>\n          <StLoginFormControlInput\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            {...formik.getFieldProps(\"email\")}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <p>{formik.errors.email}</p>\n          ) : null}\n        </StLoginFormControl>\n        <StLoginFormControl>\n          <label htmlFor=\"password\">password:</label>\n          <StLoginFormControlInput\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            {...formik.getFieldProps(\"password\")}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <p>{formik.errors.password}</p>\n          ) : null}\n          <h4 className=\"forgot-password\">forgot password</h4>\n        </StLoginFormControl>\n        <StSubmitBtn type=\"submit\">Submit</StSubmitBtn>\n      </StLoginForm>\n    </StLoginContainer>\n  );\n};\n\nexport default LoginForm;\n"],"sourceRoot":""}