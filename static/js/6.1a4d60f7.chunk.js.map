{"version":3,"sources":["components/timeHelper.js","components/Home/components/List/style.js","components/Home/components/List/index.js","redux/accounts/selectors.js","components/Home/components/Bank/style.js","components/Home/components/Bank/index.js","components/Home/components/CartsPopUp/style.js","components/Home/components/CartsPopUp/index.js","components/Home/components/AddCartPopUp/style.js","components/Home/components/AddCartPopUp/index.js","redux/accounts/actions.js","components/Home/style.js","components/Home/components/AddTransation/style.js","components/Home/components/AddTransation/index.js","components/Home/index.js"],"names":["dayjs","extend","jalali","calendar","StHomeMoneyTransformItem","styled","li","props","isInput","HomeListItem","currentAccount","transactions","slice","length","reverse","map","name","time","price","className","date","format","locale","convertToJalaliDate","console","log","toLocaleString","selectors","getAccounts","store","accounts","StHomeBankName","section","StHomeBankNameAdd","div","StHomeBankNameIconBox","Bank","setIsCardsPopedUp","Logo","banks","bank","toLowerCase","onClick","prev","amount","StCartPopUp","StCartPopUpContent","ul","StCartPopUpContentItem","CartsPopUp","setAccount","useSelector","account","item","banksColor","id","banksName","StAddCartPopUp","StAddCartPopUpContent","StAddCartPopUpContentItem","numberBanks","StAddCartPopUpContentForm","form","StAddCartPopUpContentFormControl","StAddCartFormControlInput","input","StAddCartPopUpContentFormSubmitContainer","StAddCartPopUpContentFormSubmitBtn","button","StAddCartPopUpContentFormEnd","StAddCardSelectTitle","AddCartPopUp","setIsAddCardsPopedUp","useState","bankNamePu","setBankNamePustate","dispatch","useDispatch","bankNameValue","validationSchema","Yup","min","max","required","formik","useFormik","initialValues","onSubmit","values","payload","uuidv4","Date","toISOString","type","ActionTypes","ADD_ACCOUNT","refah","saderat","saman","mellat","melli","sina","tejarat","shahr","toLocaleLowerCase","banksNameArr","handleSubmit","htmlFor","placeholder","getFieldProps","errors","touched","align","StHomeContainer","StHomeDashboard","StHomeBank","article","StHomeBankAddCard","StHomeMoneyTransform","StHomeMoneyTransformTitle","header","StAddTransaction","StAddTransactionContent","StAddTransactionContentItem","StAddTransactionContentForm","StAddTransactionContentFormControl","StAddTransactionContentFormSubmitContainer","StAddTransactionContentFormSubmitBtn","StAddTransactionContentFormEnd","StAddTransactionSelectTitle","AddTransaction","setIsAddTransactionPu","bankAccId","setBankAccId","isInputchecked","setIsInputchecked","transaction","ADD_TRANSACTION","key","checked","onChange","setFieldValue","Home","isCardsPopedUp","isAddCardsPopedUp","isAddTransactionPu","find","useLayoutEffect","Object","keys","to"],"mappings":"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","file":"static/js/6.1a4d60f7.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\nimport jalali from \"jalaliday\";\n\ndayjs.extend(jalali);\ndayjs.calendar(\"jalali\"); // Jalali Calendar\n\nexport const convertToJalaliDate = (date, format = \"DD MMMM YYYY - HH:mm\") =>\n  dayjs(date, { jalali: true }).locale(\"fa\").format(format);\n","import styled from \"styled-components\";\n\nexport const StHomeMoneyTransformItem = styled.li`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  & span {\n    min-width: 120px;\n    text-align: center;\n  }\n  .data--name {\n    font-weight: bold;\n  }\n  .data--time {\n    color: #00000044;\n  }\n  .data--cost {\n    min-width: 150px;\n    color: ${(props) => (props.isInput ? `green` : `red`)};\n  }\n`;\n","import React from \"react\";\nimport { convertToJalaliDate } from \"../../../timeHelper\";\nimport { StHomeMoneyTransformItem } from \"./style\";\n\nconst HomeListItem = ({ currentAccount }) => {\n  const transactions = currentAccount?.transactions;\n  return transactions\n    .slice(transactions?.length - 3, transactions?.length)\n    .reverse()\n    .map(({ name, time, isInput, price }) => (\n      <StHomeMoneyTransformItem isInput={isInput}>\n        <span className=\"data--name\">{name}</span>\n        <span className=\"data--time\">\n          {convertToJalaliDate(time)}\n          {console.log(time)}\n        </span>\n        <span className=\"data--cost\">تومان {price?.toLocaleString(\"fa\")}</span>\n      </StHomeMoneyTransformItem>\n    ));\n};\n\nexport default HomeListItem;\n","const getAccounts = (store) => store.accounts;\n\nconst selectors = {\n  getAccounts,\n};\n\nexport default selectors;\n","import styled from \"styled-components\";\n\nexport const StHomeBankName = styled.section`\n  width: 85%;\n  height: 300px;\n  padding: 60px;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  background-color: #473252;\n  border-radius: 40px;\n  transition: all 0.4s linear;\n  :hover {\n    cursor: pointer;\n    transition: all 0.1s linear;\n    box-shadow: 0 15px 30px rgba(41, 20, 52, 0.4);\n  }\n`;\nexport const StHomeBankNameAdd = styled.div`\n  width: 100%;\n  height: 80px;\n  color: #e0e0e099;\n  font-size: 1.3rem;\n  margin-top: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  & p {\n    color: #fff;\n    align-self: flex-start;\n    font-size: 2rem;\n  }\n`;\n\nexport const StHomeBankNameIconBox = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport { banks } from \"../../../helperDate\";\n\nimport {\n  StHomeBankName,\n  StHomeBankNameAdd,\n  StHomeBankNameIconBox,\n} from \"./style\";\n\nconst Bank = ({ currentAccount, setIsCardsPopedUp }) => {\n  const Logo = banks[currentAccount?.bank?.toLowerCase()];\n  return (\n    <StHomeBankName onClick={() => setIsCardsPopedUp((prev) => !prev)}>\n      <StHomeBankNameIconBox>\n        <p>{currentAccount?.name}</p>\n        <Logo />\n      </StHomeBankNameIconBox>\n      <StHomeBankNameAdd>\n        موجودی\n        <p>{currentAccount?.amount?.toLocaleString(\"fa\")}</p>\n      </StHomeBankNameAdd>\n    </StHomeBankName>\n  );\n};\n\nexport default Bank;\n","import styled from \"styled-components\";\n\nexport const StCartPopUp = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StCartPopUpContent = styled.ul`\n  width: 50%;\n  height: 50%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n`;\nexport const StCartPopUpContentItem = styled.li`\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  :hover {\n    background-color: #efefef;\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport selectors from \"../../../../redux/accounts/selectors\";\nimport { banksColor, banksName } from \"../../../helperDate\";\nimport {\n  StCartPopUp,\n  StCartPopUpContent,\n  StCartPopUpContentItem,\n} from \"./style\";\n\nconst CartsPopUp = ({ setIsCardsPopedUp, setAccount }) => {\n  const accounts = useSelector(selectors.getAccounts);\n\n  const bankChangeHandler = (item) => () => {\n    setAccount(item);\n  };\n\n  return (\n    <StCartPopUp onClick={() => setIsCardsPopedUp((prev) => !prev)}>\n      <StCartPopUpContent>\n        {accounts.map((account) => {\n          const Logo = banksColor[account.bank.toLowerCase()];\n          return (\n            <StCartPopUpContentItem onClick={bankChangeHandler(account.id)}>\n              <h1>{banksName[account.bank.toLowerCase()]}</h1>\n              <h2>{<Logo />}</h2>\n            </StCartPopUpContentItem>\n          );\n        })}\n      </StCartPopUpContent>\n    </StCartPopUp>\n  );\n};\n\nexport default CartsPopUp;\n","import styled from \"styled-components\";\n\nexport const StAddCartPopUp = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StAddCartPopUpContent = styled.ul`\n  width: 65%;\n  height: 70%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n  position: relative;\n  & span {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    font-size: 1.5rem;\n    margin-bottom: 30px;\n    align-items: center;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    & svg {\n      width: 30px;\n      height: 30px;\n      pad: 5px;\n      color: #ff0000;\n      border-radius: 50%;\n      border: 1px solid #ff0000;\n      cursor: pointer;\n    }\n  }\n`;\nexport const StAddCartPopUpContentItem = styled.div`\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  z-index: 3;\n  & svg {\n    cursor: pointer;\n  }\n  & :nth-child(${(props) => props.numberBanks}) {\n    background-color: greenyellow;\n    border-radius: 10px;\n  }\n`;\n\nexport const StAddCartPopUpContentForm = styled.form`\n  width: 100%;\n  margin: 10px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  & p {\n    color: red;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StAddCartPopUpContentFormControl = styled.form`\n  width: 100%;\n  height: auto;\n  margin: 20px auto;\n  text-align: right;\n`;\n\nexport const StAddCartFormControlInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  text-align: right;\n  margin-top: 10px;\n  padding: 0.5rem;\n  color: #222;\n  border-bottom: 2px solid #e0e0e0;\n`;\nexport const StAddCartPopUpContentFormSubmitContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 30px;\n  padding: 0 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StAddCartPopUpContentFormSubmitBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  left: 40px;\n  color: #fff;\n  align-self: flex-start;\n  background: #88d453;\n  cursor: pointer;\n  border-radius: 10px;\n`;\nexport const StAddCartPopUpContentFormEnd = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  right: 40px;\n  color: #e74c3c;\n  align-self: flex-end;\n  border: 2px solid #e74c3c;\n  cursor: pointer;\n  border-radius: 10px;\n`;\n\nexport const StAddCardSelectTitle = styled.div`\n  width: 100%;\n  height: 300px;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { banksColor, banksNameArr } from \"../../../helperDate\";\nimport { useDispatch } from \"react-redux\";\nimport { addAccount } from \"../../../../redux/accounts/actions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { IoClose } from \"react-icons/io5\";\n\nimport {\n  StAddCardSelectTitle,\n  StAddCartFormControlInput,\n  StAddCartPopUp,\n  StAddCartPopUpContent,\n  StAddCartPopUpContentForm,\n  StAddCartPopUpContentFormControl,\n  StAddCartPopUpContentFormEnd,\n  StAddCartPopUpContentFormSubmitBtn,\n  StAddCartPopUpContentFormSubmitContainer,\n  StAddCartPopUpContentItem,\n} from \"./style\";\n\nconst AddCartPopUp = ({ setIsAddCardsPopedUp }) => {\n  const [bankNamePu, setBankNamePustate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const bankNameValue = (item) => () => {\n    setBankNamePustate(item);\n  };\n\n  const initialValues = {\n    amount: \"\",\n    name: \"\",\n  };\n\n  const onSubmit = (values) => {\n    dispatch(\n      addAccount({\n        ...values,\n        bank: bankNamePu,\n        id: uuidv4(),\n        transactions: [],\n        time: new Date().toISOString(),\n      })\n    );\n    setIsAddCardsPopedUp((prev) => !prev);\n  };\n\n  const validationSchema = Yup.object({\n    amount: Yup.string(\"تایپ وارد شده نادرست است\")\n      .min(7, \"اعداد وارد شده باید بیشتر از ۷ عدد باشد\")\n      .max(10, \"بیشترین مقدار\")\n      .required(\"این فیلد الزامی میباشد\"),\n    name: Yup.string()\n      .required(\"این فیلد الزامی میباشد\")\n      .min(4, \"مقدار وارد شده کمتر از ۴ کاراکتر میباشد\"),\n  });\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  const BanksSelect = {\n    refah: 1,\n    saderat: 2,\n    saman: 3,\n    mellat: 4,\n    melli: 5,\n    sina: 6,\n    tejarat: 7,\n    shahr: 8,\n  };\n  const numberBanks = BanksSelect[bankNamePu.toLocaleLowerCase()];\n  return (\n    <StAddCartPopUp>\n      <StAddCartPopUpContent>\n        <span>\n          <h1> افزودن حساب</h1>\n          <IoClose onClick={() => setIsAddCardsPopedUp((prev) => !prev)} />\n        </span>\n        <StAddCartPopUpContentItem numberBanks={numberBanks}>\n          {banksNameArr.map((item) => {\n            const Logo = banksColor[item.toLocaleLowerCase()];\n            return <Logo onClick={bankNameValue(item)} />;\n          })}\n        </StAddCartPopUpContentItem>\n        {bankNamePu ? (\n          <StAddCartPopUpContentForm onSubmit={formik.handleSubmit}>\n            <StAddCartPopUpContentFormControl>\n              <label htmlFor=\"name\"> : عنوان حساب</label>\n              <StAddCartFormControlInput\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"عنوان حساب\"\n                required\n                {...formik.getFieldProps(\"name\")}\n              />\n              {formik.errors.name && formik.touched.name ? (\n                <p>{formik.errors.name}</p>\n              ) : null}\n            </StAddCartPopUpContentFormControl>\n            <StAddCartPopUpContentFormControl>\n              <label htmlFor=\"cost\">: دارایی فعلی</label>\n              <StAddCartFormControlInput\n                type=\"number\"\n                id=\"amount\"\n                name=\"amount\"\n                placeholder=\"دارایی (تومان)\"\n                required\n                {...formik.getFieldProps(\"amount\")}\n              />\n              {formik.errors.amount && formik.touched.amount ? (\n                <p>{formik.errors.amount}</p>\n              ) : null}\n            </StAddCartPopUpContentFormControl>\n            <StAddCartPopUpContentFormSubmitContainer>\n              <StAddCartPopUpContentFormSubmitBtn align type=\"submit\">\n                اضافه کردن\n              </StAddCartPopUpContentFormSubmitBtn>\n              <StAddCartPopUpContentFormEnd\n                onClick={() => setIsAddCardsPopedUp((prev) => !prev)}\n              >\n                انصراف\n              </StAddCartPopUpContentFormEnd>\n            </StAddCartPopUpContentFormSubmitContainer>\n          </StAddCartPopUpContentForm>\n        ) : (\n          <StAddCardSelectTitle>\n            لطفا بانک را انتخاب نمایید\n          </StAddCardSelectTitle>\n        )}\n      </StAddCartPopUpContent>\n    </StAddCartPopUp>\n  );\n};\n\nexport default AddCartPopUp;\n","import { ActionTypes } from \"./types\";\n\nexport const addAccount = (payload) => {\n  return {\n    type: ActionTypes.ADD_ACCOUNT,\n    payload,\n  };\n};\nexport const addTransaction = (payload) => {\n  return {\n    type: ActionTypes.ADD_TRANSACTION,\n    payload,\n  };\n};\n\nexport const deleteAccount = (payload) => {\n  return {\n    type: ActionTypes.DELETE_ACCOUNT,\n    payload,\n  };\n};\nexport const deleteTransaction = (payload) => {\n  return {\n    type: ActionTypes.DELETE_TRANSACTION,\n    payload,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const StHomeContainer = styled.div`\n  width: 100%;\n  height: auto;\n  margin: 40px 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const StHomeDashboard = styled.div`\n  width: 100%;\n  height: auto;\n  color: #473252;\n  font-size: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n`;\nexport const StHomeBank = styled.article`\n  width: 100%;\n  max-height: 300px;\n  border-radius: 20px;\n  margin: 50px auto;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\nexport const StHomeBankAddCard = styled.div`\n  width: 50px;\n  height: 100px;\n  font-size: 1.5rem;\n  border-radius: 100px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed black;\n  transition: all 0.4s linear;\n  :hover {\n    cursor: pointer;\n    transition: all 0.1s linear;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const StHomeMoneyTransform = styled.ul`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  justify-content: center;\n`;\n\nexport const StHomeMoneyTransformTitle = styled.header`\n  width: 100%;\n  height: 50px;\n  margin-bottom: 20px;\n  font-size: 2rem;\n  display: flex;\n  align-self: baseline;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  & span {\n    align-self: center;\n    font-size: 1rem;\n    color: #dc7031;\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StAddTransaction = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StAddTransactionContent = styled.ul`\n  width: 65%;\n  height: 70%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n  position: relative;\n  & span {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    font-size: 1.5rem;\n    margin-bottom: 30px;\n    align-items: center;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    & svg {\n      width: 30px;\n      height: 30px;\n      pad: 5px;\n      color: #ff0000;\n      border-radius: 50%;\n      border: 1px solid #ff0000;\n      cursor: pointer;\n    }\n  }\n`;\nexport const StAddTransactionContentItem = styled.div`\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  z-index: 3;\n  & svg {\n    cursor: pointer;\n  }\n  & :nth-child(${(props) => props.numberBanks}) {\n    background-color: greenyellow;\n    border-radius: 10px;\n  }\n`;\n\nexport const StAddTransactionContentForm = styled.form`\n  width: 100%;\n  margin: 10px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  & p {\n    color: red;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StAddTransactionContentFormControl = styled.form`\n  width: 100%;\n  height: auto;\n  margin: 20px auto;\n  text-align: right;\n`;\n\nexport const StAddCartFormControlInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  text-align: right;\n  margin-top: 10px;\n  padding: 0.5rem;\n  color: #222;\n  border-bottom: 2px solid #e0e0e0;\n`;\nexport const StAddTransactionContentFormSubmitContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const StAddTransactionContentFormSubmitBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  left: 40px;\n  color: #fff;\n  background: #88d453;\n  cursor: pointer;\n  border-radius: 10px;\n`;\nexport const StAddTransactionContentFormEnd = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  right: 40px;\n  color: #e74c3c;\n  border: 2px solid #e74c3c;\n  cursor: pointer;\n  border-radius: 10px;\n`;\n\nexport const StAddTransactionSelectTitle = styled.div`\n  width: 100%;\n  height: 300px;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { banksColor } from \"../../../helperDate\";\nimport selectors from \"../../../../redux/accounts/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTransaction } from \"../../../../redux/accounts/actions\";\nimport Switch from \"react-switch\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { IoClose } from \"react-icons/io5\";\n\nimport {\n  StAddCartFormControlInput,\n  StAddTransaction,\n  StAddTransactionContent,\n  StAddTransactionContentForm,\n  StAddTransactionContentFormControl,\n  StAddTransactionContentFormEnd,\n  StAddTransactionContentFormSubmitBtn,\n  StAddTransactionContentFormSubmitContainer,\n  StAddTransactionContentItem,\n  StAddTransactionSelectTitle,\n} from \"./style\";\n\nconst AddTransaction = ({ setIsAddTransactionPu }) => {\n  const [bankAccId, setBankAccId] = useState(\"\");\n  const [isInputchecked, setIsInputchecked] = useState(false);\n\n  const accounts = useSelector(selectors.getAccounts);\n\n  const dispatch = useDispatch();\n\n  const bankNameValue = (item) => () => {\n    setBankAccId(item);\n  };\n\n  const initialValues = {\n    name: \"\",\n    price: \"\",\n  };\n\n  const onSubmit = (values) => {\n    dispatch(\n      addTransaction({\n        id: bankAccId,\n        transaction: {\n          ...values,\n          id: uuidv4(),\n          time: new Date(),\n        },\n      })\n    );\n    setIsAddTransactionPu((prev) => !prev);\n  };\n\n  const validationSchema = Yup.object({\n    price: Yup.string()\n      .min(7, \"اعداد وارد شده باید بیشتر از ۷ عدد باشد\")\n      .max(10, \"بیشترین مقدار\")\n      .required(\"این فیلد الزامی میباشد\"),\n    name: Yup.string()\n      .required(\"این فیلد الزامی میباشد\")\n      .min(4, \"مقدار وارد شده کمتر از ۴ کاراکتر میباشد\"),\n  });\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  const formIsInputHandler = (checked) => {\n    formik.setFieldValue(\"isInput\", checked);\n    setIsInputchecked(!isInputchecked);\n  };\n\n  return (\n    <StAddTransaction>\n      <StAddTransactionContent>\n        <span>\n          <h1>افزودن تراکنش</h1>\n          <IoClose onClick={() => setIsAddTransactionPu((prev) => !prev)} />\n        </span>\n        <StAddTransactionContentItem>\n          {accounts.map((item) => {\n            const Logo = banksColor[item.bank.toLocaleLowerCase()];\n            return <Logo onClick={bankNameValue(item.id)} key={item.id} />;\n          })}\n        </StAddTransactionContentItem>\n        {bankAccId ? (\n          <StAddTransactionContentForm onSubmit={formik.handleSubmit}>\n            <StAddTransactionContentFormControl>\n              <label htmlFor=\"name\"> : عنوان تراکنش</label>\n              <StAddCartFormControlInput\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"عنوان تراکنش\"\n                required\n                {...formik.getFieldProps(\"name\")}\n              />\n              {formik.errors.name && formik.touched.name ? (\n                <p>{formik.errors.name}</p>\n              ) : null}\n            </StAddTransactionContentFormControl>\n            <StAddTransactionContentFormControl>\n              <label htmlFor=\"price\">: هزینه</label>\n              <StAddCartFormControlInput\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"هزینه (تومان)\"\n                required\n                {...formik.getFieldProps(\"price\")}\n              />\n              {formik.errors.price && formik.touched.price ? (\n                <p>{formik.errors.price}</p>\n              ) : null}\n            </StAddTransactionContentFormControl>\n            <StAddTransactionContentFormSubmitContainer>\n              <Switch checked={isInputchecked} onChange={formIsInputHandler} />\n              واریز به حساب\n            </StAddTransactionContentFormSubmitContainer>\n            <StAddTransactionContentFormSubmitContainer>\n              <StAddTransactionContentFormSubmitBtn type=\"submit\">\n                اضافه کردن\n              </StAddTransactionContentFormSubmitBtn>\n              <StAddTransactionContentFormEnd\n                onClick={() => setIsAddTransactionPu((prev) => !prev)}\n              >\n                انصراف\n              </StAddTransactionContentFormEnd>\n            </StAddTransactionContentFormSubmitContainer>\n          </StAddTransactionContentForm>\n        ) : (\n          <StAddTransactionSelectTitle>\n            لطفا کارت خود را انتخاب نمایید\n          </StAddTransactionSelectTitle>\n        )}\n      </StAddTransactionContent>\n    </StAddTransaction>\n  );\n};\n\nexport default AddTransaction;\n","import React, { useLayoutEffect } from \"react\";\nimport { useState } from \"react\";\n\nimport { HiOutlinePlusSm } from \"react-icons/hi\";\n\nimport HomeListItem from \"./components/List\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport selectors from \"../../redux/accounts/selectors\";\n\nimport Bank from \"./components/Bank\";\nimport CartsPopUp from \"./components/CartsPopUp\";\nimport AddCartPopUp from \"./components/AddCartPopUp\";\nimport { StHomeBankName } from \"./components/Bank/style\";\n\nimport {\n  StHomeBank,\n  StHomeBankAddCard,\n  StHomeContainer,\n  StHomeDashboard,\n  StHomeMoneyTransform,\n  StHomeMoneyTransformTitle,\n} from \"./style\";\nimport { StHomeMoneyTransformItem } from \"./components/List/style\";\nimport AddTransaction from \"./components/AddTransation\";\n\nconst Home = () => {\n  const accounts = useSelector(selectors.getAccounts);\n  const [account, setAccount] = useState(\"\");\n\n  const [isCardsPopedUp, setIsCardsPopedUp] = useState(false);\n  const [isAddCardsPopedUp, setIsAddCardsPopedUp] = useState(false);\n  const [isAddTransactionPu, setIsAddTransactionPu] = useState(false);\n\n  const currentAccount = accounts.find((item) => item.id === account) || {};\n\n  useLayoutEffect(() => {\n    if (!account && accounts.length) {\n      setAccount(accounts[0]?.id);\n    }\n  }, [accounts, account]);\n\n  return (\n    <StHomeContainer>\n      {isCardsPopedUp && (\n        <CartsPopUp\n          setIsCardsPopedUp={setIsCardsPopedUp}\n          setAccount={setAccount}\n        />\n      )}\n      {isAddCardsPopedUp && (\n        <AddCartPopUp setIsAddCardsPopedUp={setIsAddCardsPopedUp} />\n      )}\n      {isAddTransactionPu && (\n        <AddTransaction setIsAddTransactionPu={setIsAddTransactionPu} />\n      )}\n      <StHomeDashboard>\n        <StHomeMoneyTransformTitle>\n          حساب کاربری\n          <span onClick={() => setIsAddTransactionPu(!isAddTransactionPu)}>\n            افزودن تراکنش\n          </span>\n        </StHomeMoneyTransformTitle>\n        <StHomeBank>\n          {Object.keys(currentAccount).length ? (\n            <Bank\n              currentAccount={currentAccount}\n              setIsCardsPopedUp={setIsCardsPopedUp}\n            />\n          ) : (\n            <StHomeBankName> هیچ حسابی تغریف نشده</StHomeBankName>\n          )}\n\n          <StHomeBankAddCard\n            onClick={() => setIsAddCardsPopedUp(!isAddCardsPopedUp)}\n          >\n            <span>\n              <HiOutlinePlusSm />\n            </span>\n          </StHomeBankAddCard>\n        </StHomeBank>\n      </StHomeDashboard>\n      <StHomeMoneyTransform>\n        <StHomeMoneyTransformTitle>\n          نقل و انتقالات\n          <Link to=\"/statistic\">\n            <span>مشاهده همه</span>\n          </Link>\n        </StHomeMoneyTransformTitle>\n        {Object.keys(currentAccount).length &&\n        currentAccount?.transactions?.length ? (\n          <HomeListItem currentAccount={currentAccount} />\n        ) : (\n          <StHomeMoneyTransformItem>\n            تراکنشی تعریف نشده\n          </StHomeMoneyTransformItem>\n        )}\n      </StHomeMoneyTransform>\n    </StHomeContainer>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}