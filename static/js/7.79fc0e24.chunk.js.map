{"version":3,"sources":["components/Home/components/List/style.js","components/Home/components/List/index.js","components/Home/components/Bank/style.js","components/Home/components/Bank/index.js","components/Home/components/CartsPopUp/style.js","components/Home/components/CartsPopUp/index.js","components/Home/components/AddCartPopUp/style.js","components/Home/components/AddCartPopUp/index.js","redux/accounts/actions.js","components/Home/style.js","components/Home/components/AddTransation/style.js","components/Home/components/AddTransation/index.js","components/Home/index.js","redux/accounts/selectors.js","components/timeHelper.js"],"names":["StHomeMoneyTransformItem","styled","li","props","isInput","HomeListItem","currentAccount","transactions","slice","reverse","map","name","time","price","bank","id","Logo","banksColor","key","className","convertToJalaliDate","toLocaleString","StHomeBankName","section","StHomeBankNameAdd","div","amount","StHomeBankNameIconBox","Bank","setIsCardsPopedUp","banks","toLowerCase","bankName","banksName","onClick","prev","StCartPopUp","StCartPopUpContent","ul","StCartPopUpContentItem","CartsPopUp","setAccount","accounts","useSelector","selectors","getAccounts","account","item","StAddCartPopUp","StAddCartPopUpContent","StAddCartPopUpContentItem","numberBanks","StAddCartPopUpContentForm","form","StAddCartPopUpContentFormControl","StAddCartFormControlInput","input","StAddCartPopUpContentFormSubmitContainer","StAddCartPopUpContentFormSubmitBtn","button","StAddCartPopUpContentFormEnd","StAddCardSelectTitle","StAddCartContentSingleItem","selected","AddCartPopUp","setIsAddCardsPopedUp","useState","setBankName","dispatch","useDispatch","bankNameValue","validationSchema","Yup","min","max","required","formik","useFormik","initialValues","onSubmit","values","payload","uuidv4","Date","toISOString","type","ActionTypes","ADD_ACCOUNT","banksNameArr","index","toLocaleLowerCase","handleSubmit","htmlFor","placeholder","getFieldProps","errors","touched","align","StHomeContainer","StHomeDashboard","StHomeBank","article","StHomeBankAddCard","StHomeMoneyTransform","StHomeMoneyTransformTitle","header","StHomeMoneyListNoAction","StAddTransaction","StAddTransactionContent","StAddTransactionContentItem","StAddTransactionContentSingleItem","StAddTransactionContentForm","StAddTransactionContentFormControl","StAddTransactionContentFormSubmitContainer","StAddTransactionContentFormSubmitBtn","StAddTransactionContentFormEnd","StAddTransactionSelectTitle","AddTransaction","setIsAddTransactionPu","bankAccId","setBankAccId","isInputchecked","setIsInputchecked","transaction","find","ADD_TRANSACTION","checked","onChange","setFieldValue","length","Home","isCardsPopedUp","isAddCardsPopedUp","isAddTransactionPu","useLayoutEffect","Object","keys","to","List","store","dayjs","extend","jalali","calendar","date","format","locale"],"mappings":"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","file":"static/js/7.79fc0e24.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StHomeMoneyTransformItem = styled.li`\n  width: 100%;\n  height: 80px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  & span {\n    min-width: 120px;\n    text-align: center;\n  }\n  .data--name {\n    font-weight: bold;\n  }\n  .data--time {\n    color: #00000044;\n  }\n  .data--cost {\n    min-width: 150px;\n    color: ${(props) => (props.isInput ? `green` : `red`)};\n  }\n`;\n","import React from \"react\";\nimport { banksColor } from \"../../../helperDate\";\nimport { convertToJalaliDate } from \"../../../timeHelper\";\nimport { StHomeMoneyTransformItem } from \"./style\";\n\nconst HomeListItem = ({ currentAccount }) => {\n  const transactions = currentAccount?.transactions;\n  return transactions\n    .slice(-3)\n    .reverse()\n    .map(({ name, time, isInput, price, bank, id }) => {\n      const Logo = banksColor[bank];\n      return (\n        <StHomeMoneyTransformItem isInput={isInput} key={id}>\n          <span>\n            <Logo />\n          </span>\n          <span className=\"data--name\">{name}</span>\n          <span className=\"data--time\">{convertToJalaliDate(time)}</span>\n          <span className=\"data--cost\">\n            تومان {price?.toLocaleString(\"fa\")}\n          </span>\n        </StHomeMoneyTransformItem>\n      );\n    });\n};\n\nexport default HomeListItem;\n","import styled from \"styled-components\";\n\nexport const StHomeBankName = styled.section`\n  width: 85%;\n  height: 300px;\n  padding: 60px;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  background-color: #473252;\n  border-radius: 40px;\n  transition: all 0.4s linear;\n  :hover {\n    cursor: pointer;\n    transition: all 0.1s linear;\n    box-shadow: 0 15px 30px rgba(41, 20, 52, 0.4);\n  }\n`;\nexport const StHomeBankNameAdd = styled.div`\n  width: 100%;\n  height: 80px;\n  color: #e0e0e099;\n  font-size: 1.3rem;\n  margin-top: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n  & p {\n    color: ${(props) => (props.amount ? `#ea4c46` : `#fff`)};\n    align-self: flex-start;\n    font-size: 2rem;\n  }\n`;\n\nexport const StHomeBankNameIconBox = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  & span {\n    width: 150px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n","import React from \"react\";\nimport { banks, banksName } from \"../../../helperDate\";\n\nimport {\n  StHomeBankName,\n  StHomeBankNameAdd,\n  StHomeBankNameIconBox,\n} from \"./style\";\n\nconst Bank = ({ currentAccount, setIsCardsPopedUp }) => {\n  const Logo = banks[currentAccount?.bank?.toLowerCase()];\n  const bankName = banksName[currentAccount?.bank?.toLowerCase()];\n\n  const amount = currentAccount?.amount;\n  return (\n    <StHomeBankName onClick={() => setIsCardsPopedUp((prev) => !prev)}>\n      <StHomeBankNameIconBox>\n        <p>{currentAccount?.name}</p>\n        <span>\n          <Logo />\n          <p>{bankName}</p>\n        </span>\n      </StHomeBankNameIconBox>\n      <StHomeBankNameAdd amount={amount < 0}>\n        موجودی\n        <p>{amount.toLocaleString(\"fa\")}</p>\n      </StHomeBankNameAdd>\n    </StHomeBankName>\n  );\n};\n\nexport default Bank;\n","import styled from \"styled-components\";\n\nexport const StCartPopUp = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StCartPopUpContent = styled.ul`\n  width: 50%;\n  height: 50%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n  & h1 {\n    font-size: 1.3rem;\n    margin: 10px 0;\n  }\n`;\nexport const StCartPopUpContentItem = styled.li`\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  :hover {\n    background-color: #efefef;\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport selectors from \"../../../../redux/accounts/selectors\";\nimport { banksColor, banksName } from \"../../../helperDate\";\nimport {\n  StCartPopUp,\n  StCartPopUpContent,\n  StCartPopUpContentItem,\n} from \"./style\";\n\nconst CartsPopUp = ({ setIsCardsPopedUp, setAccount }) => {\n  const accounts = useSelector(selectors.getAccounts);\n\n  const bankChangeHandler = (item) => () => {\n    setAccount(item);\n  };\n\n  return (\n    <StCartPopUp onClick={() => setIsCardsPopedUp((prev) => !prev)}>\n      <StCartPopUpContent>\n        <h1>لیست کارت ها</h1>\n        {accounts.map((account) => {\n          const Logo = banksColor[account.bank.toLowerCase()];\n          return (\n            <StCartPopUpContentItem onClick={bankChangeHandler(account.id)}>\n              <h1>بانک {banksName[account.bank.toLowerCase()]}</h1>\n              <h2>{<Logo />}</h2>\n            </StCartPopUpContentItem>\n          );\n        })}\n      </StCartPopUpContent>\n    </StCartPopUp>\n  );\n};\n\nexport default CartsPopUp;\n","import styled from \"styled-components\";\n\nexport const StAddCartPopUp = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StAddCartPopUpContent = styled.ul`\n  width: 65%;\n  height: 70%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n  position: relative;\n  & span {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    font-size: 1.5rem;\n    margin-bottom: 30px;\n    align-items: center;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    & svg {\n      width: 30px;\n      height: 30px;\n      pad: 5px;\n      color: #ff0000;\n      border-radius: 50%;\n      border: 1px solid #ff0000;\n      cursor: pointer;\n    }\n  }\n`;\nexport const StAddCartPopUpContentItem = styled.div`\n  width: 100%;\n  height: 70px;\n  padding: 20px;\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  z-index: 3;\n  & svg {\n    cursor: pointer;\n  }\n  & :nth-child(${(props) => props.numberBanks}) {\n    background-color: greenyellow;\n    border-radius: 10px;\n  }\n`;\n\nexport const StAddCartPopUpContentForm = styled.form`\n  width: 100%;\n  margin: 10px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  & p {\n    color: red;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StAddCartPopUpContentFormControl = styled.form`\n  width: 100%;\n  height: auto;\n  margin: 20px auto;\n  text-align: right;\n`;\n\nexport const StAddCartFormControlInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  text-align: right;\n  margin-top: 10px;\n  padding: 0.5rem;\n  color: #222;\n  border-bottom: 2px solid #e0e0e0;\n`;\nexport const StAddCartPopUpContentFormSubmitContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 30px;\n  padding: 0 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StAddCartPopUpContentFormSubmitBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  left: 40px;\n  color: #fff;\n  align-self: flex-start;\n  background: #88d453;\n  cursor: pointer;\n  border-radius: 10px;\n`;\nexport const StAddCartPopUpContentFormEnd = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  position: absolute;\n  bottom: 40px;\n  right: 40px;\n  color: #e74c3c;\n  align-self: flex-end;\n  border: 2px solid #e74c3c;\n  cursor: pointer;\n  border-radius: 10px;\n`;\n\nexport const StAddCardSelectTitle = styled.div`\n  width: 100%;\n  height: 300px;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StAddCartContentSingleItem = styled.div`\n  width: 100px;\n  height: auto;\n  padding: 10px;\n  line-height: 46px;\n  border-radius: 14px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #efefef;\n  background-color: ${(props) => (props.selected ? `greenyellow;` : `#fff;`)};\n`;\n","import React, { useState } from \"react\";\n\nimport { IoClose } from \"react-icons/io5\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { useDispatch } from \"react-redux\";\nimport { banksColor, banksName, banksNameArr } from \"../../../helperDate\";\nimport { addAccount } from \"../../../../redux/accounts/actions\";\nimport {\n  StAddCardSelectTitle,\n  StAddCartContentSingleItem,\n  StAddCartFormControlInput,\n  StAddCartPopUp,\n  StAddCartPopUpContent,\n  StAddCartPopUpContentForm,\n  StAddCartPopUpContentFormControl,\n  StAddCartPopUpContentFormEnd,\n  StAddCartPopUpContentFormSubmitBtn,\n  StAddCartPopUpContentFormSubmitContainer,\n  StAddCartPopUpContentItem,\n} from \"./style\";\n\nconst AddCartPopUp = ({ setIsAddCardsPopedUp }) => {\n  const [bankName, setBankName] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const bankNameValue = (item) => () => {\n    setBankName(item);\n  };\n\n  const initialValues = {\n    amount: \"\",\n    name: \"\",\n  };\n\n  const onSubmit = (values) => {\n    dispatch(\n      addAccount({\n        ...values,\n        bank: bankName,\n        id: uuidv4(),\n        transactions: [],\n        time: new Date().toISOString(),\n      })\n    );\n    setIsAddCardsPopedUp((prev) => !prev);\n  };\n\n  const validationSchema = Yup.object({\n    amount: Yup.string()\n      .min(7, \"اعداد وارد شده باید بیشتر از ۷ عدد باشد\")\n      .max(10, \"بیشترین مقدار\")\n      .required(\"این فیلد الزامی میباشد\"),\n    name: Yup.string()\n      .required(\"این فیلد الزامی میباشد\")\n      .min(4, \"مقدار وارد شده نباید کمتر از ۴ کاراکتر باشد\")\n      .max(12, \"مقدار وارد شده نباید بیشتر از ۱۲ کاراکتر باشد\"),\n  });\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  return (\n    <StAddCartPopUp>\n      <StAddCartPopUpContent>\n        <span>\n          <h1> افزودن حساب</h1>\n          <IoClose onClick={() => setIsAddCardsPopedUp((prev) => !prev)} />\n        </span>\n        <StAddCartPopUpContentItem>\n          {banksNameArr.map((item, index) => {\n            const Logo = banksColor[item.toLocaleLowerCase()];\n            return (\n              <StAddCartContentSingleItem\n                onClick={bankNameValue(item)}\n                key={index}\n                selected={item === bankName}\n              >\n                <Logo />\n                <p>{banksName[item]}</p>\n              </StAddCartContentSingleItem>\n            );\n          })}\n        </StAddCartPopUpContentItem>\n        {bankName ? (\n          <StAddCartPopUpContentForm onSubmit={formik.handleSubmit}>\n            <StAddCartPopUpContentFormControl>\n              <label htmlFor=\"name\"> : عنوان حساب</label>\n              <StAddCartFormControlInput\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"عنوان حساب\"\n                required\n                {...formik.getFieldProps(\"name\")}\n              />\n              {formik.errors.name && formik.touched.name ? (\n                <p>{formik.errors.name}</p>\n              ) : null}\n            </StAddCartPopUpContentFormControl>\n            <StAddCartPopUpContentFormControl>\n              <label htmlFor=\"cost\">: دارایی فعلی</label>\n              <StAddCartFormControlInput\n                type=\"number\"\n                id=\"amount\"\n                name=\"amount\"\n                placeholder=\"دارایی (تومان)\"\n                required\n                {...formik.getFieldProps(\"amount\")}\n              />\n              {formik.errors.amount && formik.touched.amount ? (\n                <p>{formik.errors.amount}</p>\n              ) : null}\n            </StAddCartPopUpContentFormControl>\n            <StAddCartPopUpContentFormSubmitContainer>\n              <StAddCartPopUpContentFormSubmitBtn align type=\"submit\">\n                اضافه کردن\n              </StAddCartPopUpContentFormSubmitBtn>\n              <StAddCartPopUpContentFormEnd\n                onClick={() => setIsAddCardsPopedUp((prev) => !prev)}\n              >\n                انصراف\n              </StAddCartPopUpContentFormEnd>\n            </StAddCartPopUpContentFormSubmitContainer>\n          </StAddCartPopUpContentForm>\n        ) : (\n          <StAddCardSelectTitle>\n            لطفا بانک را انتخاب نمایید\n          </StAddCardSelectTitle>\n        )}\n      </StAddCartPopUpContent>\n    </StAddCartPopUp>\n  );\n};\n\nexport default AddCartPopUp;\n","import { ActionTypes } from \"./types\";\n\nexport const addAccount = (payload) => {\n  return {\n    type: ActionTypes.ADD_ACCOUNT,\n    payload,\n  };\n};\nexport const addTransaction = (payload) => {\n  return {\n    type: ActionTypes.ADD_TRANSACTION,\n    payload,\n  };\n};\n\nexport const deleteAccount = (payload) => {\n  return {\n    type: ActionTypes.DELETE_ACCOUNT,\n    payload,\n  };\n};\nexport const deleteTransaction = (payload) => {\n  return {\n    type: ActionTypes.DELETE_TRANSACTION,\n    payload,\n  };\n};\n","import styled from \"styled-components\";\n\nexport const StHomeContainer = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const StHomeDashboard = styled.div`\n  width: 100%;\n  height: auto;\n  color: #473252;\n  font-size: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n`;\nexport const StHomeBank = styled.article`\n  width: 100%;\n  max-height: 300px;\n  border-radius: 20px;\n  margin: 50px auto;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\nexport const StHomeBankAddCard = styled.div`\n  width: 50px;\n  height: 100px;\n  font-size: 1.5rem;\n  border-radius: 100px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px dashed black;\n  transition: all 0.4s linear;\n  :hover {\n    cursor: pointer;\n    transition: all 0.1s linear;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const StHomeMoneyTransform = styled.ul`\n  width: 100%;\n  height: auto;\n  display: flex;\n  align-self: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const StHomeMoneyTransformTitle = styled.header`\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  font-size: 1.8rem;\n  display: flex;\n  align-self: baseline;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  & span {\n    align-self: center;\n    font-size: 1rem;\n    color: #dc7031;\n    cursor: pointer;\n  }\n`;\n\nexport const StHomeMoneyListNoAction = styled.div`\n  width: 100%;\n  height: 200px;\n  font-size: 1.3rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    margin-right: 50px;\n    font-size: 2rem;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StAddTransaction = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #00000060;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport const StAddTransactionContent = styled.ul`\n  width: 65%;\n  height: 70%;\n  padding: 30px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-start;\n  background-color: #fff;\n  border-radius: 30px;\n  position: relative;\n  & span {\n    width: 100%;\n    height: 50px;\n    display: flex;\n    font-size: 1.5rem;\n    margin-bottom: 30px;\n    align-items: center;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    & svg {\n      width: 30px;\n      height: 30px;\n      pad: 5px;\n      color: #ff0000;\n      border-radius: 50%;\n      border: 1px solid #ff0000;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const StAddTransactionContentItem = styled.div`\n  width: clamp(40%, 50%, 100%);\n  height: 70px;\n  padding: 20px;\n  margin: 0 auto;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  & svg {\n    cursor: pointer;\n  }\n`;\n\nexport const StAddTransactionContentSingleItem = styled.div`\n  width: 100px;\n  height: auto;\n  padding: 10px;\n  line-height: 46px;\n  border-radius: 14px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #efefef;\n  background-color: ${(props) => (props.selected ? `greenyellow;` : `#fff;`)};\n`;\n\nexport const StAddTransactionContentForm = styled.form`\n  width: 100%;\n  margin: 10px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  & p {\n    color: red;\n    font-weight: bold;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StAddTransactionContentFormControl = styled.form`\n  width: 100%;\n  height: auto;\n  margin: 20px auto;\n  text-align: right;\n`;\n\nexport const StAddCartFormControlInput = styled.input`\n  width: 100%;\n  height: 2rem;\n  text-align: right;\n  margin-top: 10px;\n  padding: 0.5rem;\n  color: #222;\n  border-bottom: 2px solid #e0e0e0;\n`;\nexport const StAddTransactionContentFormSubmitContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const StAddTransactionContentFormSubmitBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  bottom: 40px;\n  left: 40px;\n  color: #fff;\n  cursor: pointer;\n  position: absolute;\n  border-radius: 10px;\n  background-color: #88d453;\n`;\nexport const StAddTransactionContentFormEnd = styled.button`\n  width: 200px;\n  height: 50px;\n  padding: 10px;\n  bottom: 40px;\n  right: 40px;\n  color: #e74c3c;\n  cursor: pointer;\n  position: absolute;\n  border-radius: 10px;\n  border: 2px solid #e74c3c;\n`;\n\nexport const StAddTransactionSelectTitle = styled.div`\n  width: 100%;\n  height: 300px;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\n\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTransaction } from \"../../../../redux/accounts/actions\";\nimport selectors from \"../../../../redux/accounts/selectors\";\nimport { banksColor } from \"../../../helperDate\";\n\nimport Switch from \"react-switch\";\nimport {\n  StAddCartFormControlInput,\n  StAddTransaction,\n  StAddTransactionContent,\n  StAddTransactionContentForm,\n  StAddTransactionContentFormControl,\n  StAddTransactionContentFormEnd,\n  StAddTransactionContentFormSubmitBtn,\n  StAddTransactionContentFormSubmitContainer,\n  StAddTransactionContentItem,\n  StAddTransactionContentSingleItem,\n  StAddTransactionSelectTitle,\n} from \"./style\";\n\nconst AddTransaction = ({ setIsAddTransactionPu }) => {\n  const [bankAccId, setBankAccId] = useState(\"\");\n  const [isInputchecked, setIsInputchecked] = useState(false);\n\n  const accounts = useSelector(selectors.getAccounts);\n\n  const dispatch = useDispatch();\n\n  const bankNameValue = (item) => () => {\n    setBankAccId(item);\n  };\n\n  const initialValues = {\n    name: \"\",\n    price: \"\",\n  };\n\n  const onSubmit = (values) => {\n    dispatch(\n      addTransaction({\n        id: bankAccId,\n        transaction: {\n          ...values,\n          id: uuidv4(),\n          time: new Date(),\n          bank: accounts.find((item) => item.id === bankAccId).bank,\n        },\n      })\n    );\n    setIsAddTransactionPu((prev) => !prev);\n  };\n\n  const validationSchema = Yup.object({\n    price: Yup.string()\n      .min(4, \"اعداد وارد شده باید بیشتر از ۴ عدد باشد\")\n      .max(10, \"قراتر از حداکثر مقدار تراکنش\")\n      .required(\"این فیلد الزامی میباشد\"),\n    name: Yup.string()\n      .required(\"این فیلد الزامی میباشد\")\n      .max(16, \"حداکثر کاراکتر در متن ۱۶ کاراکتر \")\n      .min(4, \"حروف وارد شده کمتر از ۴ کاراکتر میباشد\"),\n  });\n\n  const formik = useFormik({ initialValues, onSubmit, validationSchema });\n\n  const formIsInputHandler = (checked) => {\n    formik.setFieldValue(\"isInput\", checked);\n    setIsInputchecked(!isInputchecked);\n  };\n\n  return (\n    <StAddTransaction>\n      <StAddTransactionContent>\n        <span>\n          <h1>افزودن تراکنش</h1>\n          <IoClose onClick={() => setIsAddTransactionPu((prev) => !prev)} />\n        </span>\n        <StAddTransactionContentItem>\n          {accounts.map((item) => {\n            const Logo = banksColor[item.bank.toLocaleLowerCase()];\n            return (\n              <StAddTransactionContentSingleItem\n                onClick={bankNameValue(item.id)}\n                key={item.id}\n                selected={item.id === bankAccId}\n              >\n                <Logo />\n                <p>{item.name}</p>\n              </StAddTransactionContentSingleItem>\n            );\n          })}\n        </StAddTransactionContentItem>\n        {bankAccId ? (\n          <StAddTransactionContentForm onSubmit={formik.handleSubmit}>\n            <StAddTransactionContentFormControl>\n              <label htmlFor=\"name\"> : عنوان تراکنش</label>\n              <StAddCartFormControlInput\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"عنوان تراکنش\"\n                required\n                {...formik.getFieldProps(\"name\")}\n              />\n              {formik.errors.name && formik.touched.name ? (\n                <p>{formik.errors.name}</p>\n              ) : null}\n            </StAddTransactionContentFormControl>\n            <StAddTransactionContentFormControl>\n              <label htmlFor=\"price\">: هزینه</label>\n              <StAddCartFormControlInput\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                placeholder=\"هزینه (تومان)\"\n                required\n                {...formik.getFieldProps(\"price\")}\n              />\n              {formik.errors.price && formik.touched.price ? (\n                <p>{formik.errors.price}</p>\n              ) : null}\n            </StAddTransactionContentFormControl>\n            <StAddTransactionContentFormSubmitContainer>\n              <Switch checked={isInputchecked} onChange={formIsInputHandler} />\n              آیا تراکنش واریزی است؟\n            </StAddTransactionContentFormSubmitContainer>\n            <StAddTransactionContentFormSubmitContainer>\n              <StAddTransactionContentFormSubmitBtn type=\"submit\">\n                اضافه کردن\n              </StAddTransactionContentFormSubmitBtn>\n              <StAddTransactionContentFormEnd\n                onClick={() => setIsAddTransactionPu((prev) => !prev)}\n              >\n                انصراف\n              </StAddTransactionContentFormEnd>\n            </StAddTransactionContentFormSubmitContainer>\n          </StAddTransactionContentForm>\n        ) : (\n          <StAddTransactionSelectTitle>\n            {accounts.length\n              ? `لطفا حساب خود را انتخاب نمایید`\n              : `لطفا یک حساب برای خود ایحاد نمایید`}\n          </StAddTransactionSelectTitle>\n        )}\n      </StAddTransactionContent>\n    </StAddTransaction>\n  );\n};\n\nexport default AddTransaction;\n","import React, { useLayoutEffect } from \"react\";\nimport { useState } from \"react\";\n\nimport { HiOutlinePlusSm } from \"react-icons/hi\";\nimport { RiEmotionUnhappyLine } from \"react-icons/ri\";\n\nimport ListOfActions from \"./components/List\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport selectors from \"../../redux/accounts/selectors\";\n\nimport Bank from \"./components/Bank\";\nimport CartsPopUp from \"./components/CartsPopUp\";\nimport AddCartPopUp from \"./components/AddCartPopUp\";\nimport { StHomeBankName } from \"./components/Bank/style\";\n\nimport {\n  StHomeBank,\n  StHomeBankAddCard,\n  StHomeContainer,\n  StHomeDashboard,\n  StHomeMoneyListNoAction,\n  StHomeMoneyTransform,\n  StHomeMoneyTransformTitle,\n} from \"./style\";\nimport AddTransaction from \"./components/AddTransation\";\n\nconst Home = () => {\n  const accounts = useSelector(selectors.getAccounts);\n  const [account, setAccount] = useState(\"\");\n\n  const [isCardsPopedUp, setIsCardsPopedUp] = useState(false);\n  const [isAddCardsPopedUp, setIsAddCardsPopedUp] = useState(false);\n  const [isAddTransactionPu, setIsAddTransactionPu] = useState(false);\n\n  const currentAccount = accounts.find((item) => item.id === account) || {};\n\n  useLayoutEffect(() => {\n    if (!account && accounts.length) {\n      setAccount(accounts[0]?.id);\n    }\n  }, [accounts, account]);\n\n  return (\n    <StHomeContainer>\n      {isCardsPopedUp && (\n        <CartsPopUp\n          setIsCardsPopedUp={setIsCardsPopedUp}\n          setAccount={setAccount}\n        />\n      )}\n      {isAddCardsPopedUp && (\n        <AddCartPopUp setIsAddCardsPopedUp={setIsAddCardsPopedUp} />\n      )}\n      {isAddTransactionPu && (\n        <AddTransaction setIsAddTransactionPu={setIsAddTransactionPu} />\n      )}\n      <StHomeDashboard>\n        <StHomeMoneyTransformTitle>\n          حساب کاربری\n          <span onClick={() => setIsAddTransactionPu(!isAddTransactionPu)}>\n            افزودن تراکنش\n          </span>\n        </StHomeMoneyTransformTitle>\n        <StHomeBank>\n          {Object.keys(currentAccount).length ? (\n            <Bank\n              currentAccount={currentAccount}\n              setIsCardsPopedUp={setIsCardsPopedUp}\n            />\n          ) : (\n            <StHomeBankName> هیچ حسابی تغریف نشده</StHomeBankName>\n          )}\n\n          <StHomeBankAddCard\n            onClick={() => setIsAddCardsPopedUp(!isAddCardsPopedUp)}\n          >\n            <span>\n              <HiOutlinePlusSm />\n            </span>\n          </StHomeBankAddCard>\n        </StHomeBank>\n      </StHomeDashboard>\n      <StHomeMoneyTransform>\n        <StHomeMoneyTransformTitle>\n          آخرین تراکنش ها\n          <Link to=\"/statistic\">\n            <span>مشاهده همه</span>\n          </Link>\n        </StHomeMoneyTransformTitle>\n        {Object.keys(currentAccount).length &&\n        currentAccount?.transactions?.length ? (\n          <ListOfActions currentAccount={currentAccount} />\n        ) : (\n          <StHomeMoneyListNoAction>\n            <RiEmotionUnhappyLine /> تراکنشی تعریف نشده\n          </StHomeMoneyListNoAction>\n        )}\n      </StHomeMoneyTransform>\n    </StHomeContainer>\n  );\n};\n\nexport default Home;\n","const getAccounts = (store) => store.accounts;\n\nconst selectors = {\n  getAccounts,\n};\n\nexport default selectors;\n","import dayjs from \"dayjs\";\nimport jalali from \"jalaliday\";\n\ndayjs.extend(jalali);\ndayjs.calendar(\"jalali\"); // Jalali Calendar\n\nexport const convertToJalaliDate = (\n  date,\n  format = \"YYYY / MM / DD  -- HH:mm \"\n) => dayjs(date, { jalali: true }).locale(\"fa\").format(format);\n"],"sourceRoot":""}